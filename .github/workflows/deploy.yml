name: Deploy Swim OCR App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr libtesseract-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -c "import app.main; print('✅ App imports successfully')"
        python -c "import cv2, pytesseract, fastapi; print('✅ All dependencies available')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Update system packages
          sudo apt update
          sudo apt install -y tesseract-ocr libtesseract-dev python3-venv nginx
          
          # Create app directory
          sudo mkdir -p /opt/swim-ocr
          sudo chown -R ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} /opt/swim-ocr
          
          # Install Nginx configuration
          sudo tee /etc/nginx/sites-available/swim-ocr.conf > /dev/null <<'EOF'
          server {
              listen 80;
              server_name _;
              
              location /swim/ {
                  alias /opt/swim-ocr/static/;
                  try_files $uri $uri/ /index.html;
                  index index.html;
              }
              
              location /api/ {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  client_max_body_size 20M;
              }
              
              location /healthz {
                  proxy_pass http://127.0.0.1:8000/healthz;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
          EOF
          
          # Enable Nginx site
          sudo ln -sf /etc/nginx/sites-available/swim-ocr.conf /etc/nginx/sites-enabled/
          sudo nginx -t
          
          # Create systemd service
          sudo tee /etc/systemd/system/swim-ocr.service > /dev/null <<'EOF'
          [Unit]
          Description=Swim OCR API
          After=network.target
          
          [Service]
          User=${{ secrets.DEPLOY_USER }}
          WorkingDirectory=/opt/swim-ocr
          Environment="PATH=/opt/swim-ocr/.venv/bin"
          ExecStart=/opt/swim-ocr/.venv/bin/uvicorn app.main:app --host 127.0.0.1 --port 8000
          Restart=on-failure
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target
          EOF
    
    - name: Sync files to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          # Sync application files
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='README.md' \
            --exclude='REQUIREMENTS.md' \
            /home/runner/work/fit-converter/fit-converter/ /opt/swim-ocr/
    
    - name: Install and restart services
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          cd /opt/swim-ocr
          
          # Create/update virtual environment
          python3 -m venv .venv
          source .venv/bin/activate
          
          # Install dependencies
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Reload systemd and restart services
          sudo systemctl daemon-reload
          sudo systemctl enable swim-ocr
          sudo systemctl restart swim-ocr
          sudo systemctl reload nginx
          
          # Check service status
          sudo systemctl status swim-ocr --no-pager -l
          
          echo "🎉 Deployment complete!"
          echo "📱 App available at: http://$(curl -s ifconfig.me)/swim/"
          echo "🔍 Health check: http://$(curl -s ifconfig.me)/healthz"
